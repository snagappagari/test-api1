trigger:
  - main  # Trigger the pipeline on commits to the 'main' branch

pool:
  name: MySelfHostedPool  # Your self-hosted agent pool

variables:
  imageName: 'test-api1'  # Docker image name
  tag: '$(Build.BuildId)'  # Image tag based on build ID
  azureSubscription: 'sc-new'  # Your Azure service connection name
  resourceGroup: 'devops-connection'  # Resource group where AKS is located
  aksCluster: 'aks-all'  # AKS cluster name
  dockerServiceConnection: 'dsc'  # Docker service connection name
  dockerfilePath: './Dockerfile'  # Path to your Dockerfile
  kubernetesNamespace: 'default'  # Kubernetes namespace for deployment
  deploymentFile: 'deployment.yaml'  # Path to your Kubernetes deployment YAML file
  mavenOptions: '-DskipTests'  # Maven options (skip tests for faster builds, adjust as needed)

steps:

# Step 1: Checkout code from GitHub repository
- task: Checkout@1
  displayName: 'Checkout Code'
  inputs:
    repository: 'https://github.com/snagappagari/test-api1.git'
    ref: 'refs/heads/main'

# Step 2: Build the project using Maven
- task: Maven@3
  displayName: 'Build the project with Maven'
  inputs:
    mavenPomFile: 'pom.xml'  # Path to the Maven `pom.xml` file
    goals: 'clean package $(mavenOptions)'  # Clean and package the project
    options: '-DskipTests'  # Optionally skip tests to speed up the build

# Step 3: Build the Docker image
- task: Docker@2
  displayName: 'Build Docker Image'
  inputs:
    command: 'build'
    containerRegistry: '$(dockerServiceConnection)'  # Docker service connection
    repository: $(imageName)
    dockerfile: $(dockerfilePath)
    buildContext: $(Build.SourcesDirectory)  # Path to your project source
    tags: $(tag)  # Tag image with build ID

# Step 4: Push Docker image to Azure Container Registry (ACR)
- task: Docker@2
  displayName: 'Push Docker Image to ACR'
  inputs:
    command: 'push'
    containerRegistry: '$(dockerServiceConnection)'  # Docker service connection
    repository: $(imageName)
    tags: $(tag)

# Step 5: Get AKS credentials and configure kubectl
- task: AzureCLI@2
  displayName: 'Get AKS Credentials'
  inputs:
    azureSubscription: $(azureSubscription)  # Azure service connection
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az aks get-credentials --resource-group $(resourceGroup) --name $(aksCluster)
    displayName: 'Get AKS credentials'

# Step 6: Deploy to Kubernetes (AKS)
- task: Kubernetes@1
  displayName: 'Deploy to Kubernetes (AKS)'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: $(azureSubscription)  # Azure service connection
    azureResourceGroup: $(resourceGroup)  # Resource group
    kubernetesCluster: $(aksCluster)  # AKS cluster name
    namespace: $(kubernetesNamespace)  # Kubernetes namespace
    command: 'apply'
    arguments: '-f $(deploymentFile)'  # Path to your Kubernetes deployment file
